#!/usr/bin/env bash

echo "Executing Pulseaudio Plugin"

[ -f "$RESOURCE_FILE" ] && source "$RESOURCE_FILE"
: "${MODULE_CORE_DIR:=$(dirname $0)}"
. "$MODULE_CORE_DIR/functions"
: "${TMP_DIR:=/tmp}"

check_dependencies nolifebar-pa-status pactl

mod_init_vars() {
    sink_name="default"         # pulse audio sink name to monitor
}

mod_draw_default() {
    local -n ref_var="$1"
    local volume="$2"
    local muted="$3"
    local sink="$4"
    local ref_var="Muted   "
    if [[ "$muted" != "yes" ]]; then
        printf -v ref_var "Vol: %2s%%" "$volume"
    fi
}

mod_draw_dzen2() {
    local -n ref_var="$1"
    local volume="$2"
    local muted="$3"
    local sink="$4"
    local res="Muted   "
    if [[ "$muted" != "yes" ]]; then
        printf -v res "Vol: %2s%%" "$volume"
    fi
    ref_var="^ca(4, pactl set-sink-volume '$sink' +5%)\
^ca(5, pactl set-sink-volume '$sink' -5%)\
^ca(1, pactl set-sink-mute '$sink' toggle)\
^ca(3, pactl set-sink-volume '$sink' 35%)\
$res\
^ca()^ca()^ca()^ca()"
}

mod_loop() {
    {
        nolifebar-pa-status "$sink_name" 2>&3 \
            | while IFS=" " read -r \
            vol_column volume \
            mute_column muted \
            sink_column sink; do
            local output
            mod_draw output "$volume" "$muted" "$sink"
            printf "%s\n" "$output"> "$FIFO_FILE"
        done;
    } 3>&1
}

mod_run
